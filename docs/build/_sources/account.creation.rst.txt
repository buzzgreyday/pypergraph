Account Creation
=================

.. admonition:: Constellation Key Trio

    Accounts consists of a cryptographic key trio comprising:

    - **Private Key**: A secure cryptographic element used to authenticate ownership and authorize transactions.
      Required for signing transactions and messages. **Treat as sensitive information**.
    - **Public Key**: Derived from the private key, serves as a network identifier for node authentication and
      signature verification in trust relationships.
    - **Address**: Public wallet identifier generated from cryptographic keys. Shareable for receiving transactions
      while maintaining private key confidentiality.

-----

Create New Secrets
^^^^^^^^^^^^^^^^^^

Mnemonic Hierarchical Deterministic Key
---------------------------------------

.. code-block:: python

    from pypergraph.keystore import KeyStore

    keystore = KeyStore()
    mnemonic_phrase = keystore.get_mnemonic()  # Generate BIP-39 compliant seed phrase


Private Key
-----------

.. code-block:: python

    from pypergraph.keystore import KeyStore

    keystore = KeyStore()
    private_key = keystore.generate_private_key()


Login with Existing Key
^^^^^^^^^^^^^^^^^^^^^^^

Login with Seed Phrase
----------------------

.. code-block:: python

    from pypergraph.account import DagAccount

    account = DagAccount()
    account.login_with_seed_phrase("abandon abandon ...")  # Provide 12-word mnemonic

Login with Private Key
----------------------

.. code-block:: python

    account.login_with_private_key("private_key_here")

Login with Public Key (Read-only)
---------------------------------
.. note::
    Read only: signing, etc. not supported.

.. code-block:: python

    account.login_with_public_key("public_key_here")

-----