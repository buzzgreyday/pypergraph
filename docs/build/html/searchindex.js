Search.setIndex({"alltitles": {"Basics": [[0, null]], "Contents:": [[1, null]], "Installation": [[2, null]], "Introduction": [[3, null]], "Module contents": [[4, "module-pypergraph"], [5, "module-pypergraph.dag_keystore"], [6, "module-pypergraph.dag_network"], [7, "module-pypergraph.dag_wallet"]], "Pypergraph": [[4, null]], "Pypergraph Documentation": [[1, null]], "Submodules": [[4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "Subpackages": [[4, "subpackages"]], "pypergraph.dag_keystore package": [[5, null]], "pypergraph.dag_keystore.bip module": [[5, "module-pypergraph.dag_keystore.bip"]], "pypergraph.dag_keystore.constants module": [[5, "module-pypergraph.dag_keystore.constants"]], "pypergraph.dag_keystore.keystore module": [[5, "module-pypergraph.dag_keystore.keystore"]], "pypergraph.dag_keystore.tx_encode module": [[5, "module-pypergraph.dag_keystore.tx_encode"]], "pypergraph.dag_network package": [[6, null]], "pypergraph.dag_network.api module": [[6, "module-pypergraph.dag_network.api"]], "pypergraph.dag_network.constants module": [[6, "module-pypergraph.dag_network.constants"]], "pypergraph.dag_network.models module": [[6, "module-pypergraph.dag_network.models"]], "pypergraph.dag_wallet package": [[7, null]], "pypergraph.dag_wallet.constants module": [[7, "module-pypergraph.dag_wallet.constants"]], "pypergraph.dag_wallet.wallet module": [[7, "module-pypergraph.dag_wallet.wallet"]], "pypergraph.main module": [[4, "module-pypergraph.main"]]}, "docnames": ["basics", "index", "installation", "introduction", "pypergraph", "pypergraph.dag_keystore", "pypergraph.dag_network", "pypergraph.dag_wallet"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["basics.rst", "index.rst", "installation.rst", "introduction.rst", "pypergraph.rst", "pypergraph.dag_keystore.rst", "pypergraph.dag_network.rst", "pypergraph.dag_wallet.rst"], "indexentries": {"add_proof() (pypergraph.dag_keystore.transactionv2 method)": [[5, "pypergraph.dag_keystore.TransactionV2.add_proof", false]], "add_proof() (pypergraph.dag_keystore.tx_encode.transactionv2 method)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2.add_proof", false]], "api (class in pypergraph.dag_network)": [[6, "pypergraph.dag_network.API", false]], "api (class in pypergraph.dag_network.api)": [[6, "pypergraph.dag_network.api.API", false]], "apierror": [[6, "pypergraph.dag_network.api.APIError", false]], "balance (class in pypergraph.dag_network.models)": [[6, "pypergraph.dag_network.models.Balance", false]], "bip32 (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.Bip32", false]], "bip32 (class in pypergraph.dag_keystore.bip)": [[5, "pypergraph.dag_keystore.bip.Bip32", false]], "bip39 (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.Bip39", false]], "bip39 (class in pypergraph.dag_keystore.bip)": [[5, "pypergraph.dag_keystore.bip.Bip39", false]], "coin (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.COIN", false]], "coin (class in pypergraph.dag_keystore.constants)": [[5, "pypergraph.dag_keystore.constants.COIN", false]], "dag (pypergraph.dag_keystore.coin attribute)": [[5, "pypergraph.dag_keystore.COIN.DAG", false]], "dag (pypergraph.dag_keystore.constants.coin attribute)": [[5, "pypergraph.dag_keystore.constants.COIN.DAG", false]], "dag (pypergraph.dag_keystore.constants.derivation_path attribute)": [[5, "pypergraph.dag_keystore.constants.DERIVATION_PATH.DAG", false]], "dag (pypergraph.dag_keystore.derivation_path attribute)": [[5, "pypergraph.dag_keystore.DERIVATION_PATH.DAG", false]], "ddag_to_dag() (pypergraph.dag_network.models.balance static method)": [[6, "pypergraph.dag_network.models.Balance.ddag_to_dag", false]], "derivation_path (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.DERIVATION_PATH", false]], "derivation_path (class in pypergraph.dag_keystore.constants)": [[5, "pypergraph.dag_keystore.constants.DERIVATION_PATH", false]], "eth (pypergraph.dag_keystore.coin attribute)": [[5, "pypergraph.dag_keystore.COIN.ETH", false]], "eth (pypergraph.dag_keystore.constants.coin attribute)": [[5, "pypergraph.dag_keystore.constants.COIN.ETH", false]], "eth (pypergraph.dag_keystore.constants.derivation_path attribute)": [[5, "pypergraph.dag_keystore.constants.DERIVATION_PATH.ETH", false]], "eth (pypergraph.dag_keystore.derivation_path attribute)": [[5, "pypergraph.dag_keystore.DERIVATION_PATH.ETH", false]], "eth_ledger (pypergraph.dag_keystore.constants.derivation_path attribute)": [[5, "pypergraph.dag_keystore.constants.DERIVATION_PATH.ETH_LEDGER", false]], "eth_ledger (pypergraph.dag_keystore.derivation_path attribute)": [[5, "pypergraph.dag_keystore.DERIVATION_PATH.ETH_LEDGER", false]], "from_mnemonic() (pypergraph.dag_wallet.wallet class method)": [[7, "pypergraph.dag_wallet.Wallet.from_mnemonic", false]], "from_mnemonic() (pypergraph.dag_wallet.wallet.wallet class method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.from_mnemonic", false]], "from_private_key() (pypergraph.dag_wallet.wallet class method)": [[7, "pypergraph.dag_wallet.Wallet.from_private_key", false]], "from_private_key() (pypergraph.dag_wallet.wallet.wallet class method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.from_private_key", false]], "get_address_balance() (pypergraph.dag_network.api method)": [[6, "pypergraph.dag_network.API.get_address_balance", false]], "get_address_balance() (pypergraph.dag_network.api.api method)": [[6, "pypergraph.dag_network.api.API.get_address_balance", false]], "get_address_balance() (pypergraph.dag_wallet.wallet method)": [[7, "pypergraph.dag_wallet.Wallet.get_address_balance", false]], "get_address_balance() (pypergraph.dag_wallet.wallet.wallet method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.get_address_balance", false]], "get_dag_address_from_public_key() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_dag_address_from_public_key", false]], "get_dag_address_from_public_key() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_dag_address_from_public_key", false]], "get_dag_address_from_public_key_hex() (pypergraph.dag_wallet.wallet static method)": [[7, "pypergraph.dag_wallet.Wallet.get_dag_address_from_public_key_hex", false]], "get_dag_address_from_public_key_hex() (pypergraph.dag_wallet.wallet.wallet static method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.get_dag_address_from_public_key_hex", false]], "get_encoded() (pypergraph.dag_keystore.transactionv2 method)": [[5, "pypergraph.dag_keystore.TransactionV2.get_encoded", false]], "get_encoded() (pypergraph.dag_keystore.tx_encode.transactionv2 method)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2.get_encoded", false]], "get_last_reference() (pypergraph.dag_network.api method)": [[6, "pypergraph.dag_network.API.get_last_reference", false]], "get_last_reference() (pypergraph.dag_network.api.api method)": [[6, "pypergraph.dag_network.api.API.get_last_reference", false]], "get_mnemonic() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_mnemonic", false]], "get_mnemonic() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_mnemonic", false]], "get_mnemonic_from_input() (pypergraph.dag_wallet.wallet static method)": [[7, "pypergraph.dag_wallet.Wallet.get_mnemonic_from_input", false]], "get_mnemonic_from_input() (pypergraph.dag_wallet.wallet.wallet static method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.get_mnemonic_from_input", false]], "get_p12_from_private_key() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_p12_from_private_key", false]], "get_p12_from_private_key() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_p12_from_private_key", false]], "get_pending_transaction() (pypergraph.dag_network.api method)": [[6, "pypergraph.dag_network.API.get_pending_transaction", false]], "get_pending_transaction() (pypergraph.dag_network.api.api method)": [[6, "pypergraph.dag_network.api.API.get_pending_transaction", false]], "get_post_transaction() (pypergraph.dag_keystore.transactionv2 method)": [[5, "pypergraph.dag_keystore.TransactionV2.get_post_transaction", false]], "get_post_transaction() (pypergraph.dag_keystore.tx_encode.transactionv2 method)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2.get_post_transaction", false]], "get_private_key_from_p12() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_private_key_from_p12", false]], "get_private_key_from_p12() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_private_key_from_p12", false]], "get_private_key_from_seed() (pypergraph.dag_keystore.bip.bip32 static method)": [[5, "pypergraph.dag_keystore.bip.Bip32.get_private_key_from_seed", false]], "get_private_key_from_seed() (pypergraph.dag_keystore.bip32 static method)": [[5, "pypergraph.dag_keystore.Bip32.get_private_key_from_seed", false]], "get_private_key_from_seed() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_private_key_from_seed", false]], "get_private_key_from_seed() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_private_key_from_seed", false]], "get_public_key_from_private_hex() (pypergraph.dag_keystore.bip.bip32 static method)": [[5, "pypergraph.dag_keystore.bip.Bip32.get_public_key_from_private_hex", false]], "get_public_key_from_private_hex() (pypergraph.dag_keystore.bip32 static method)": [[5, "pypergraph.dag_keystore.Bip32.get_public_key_from_private_hex", false]], "get_public_key_from_private_key() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.get_public_key_from_private_key", false]], "get_public_key_from_private_key() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.get_public_key_from_private_key", false]], "get_root_key_from_seed() (pypergraph.dag_keystore.bip.bip32 static method)": [[5, "pypergraph.dag_keystore.bip.Bip32.get_root_key_from_seed", false]], "get_root_key_from_seed() (pypergraph.dag_keystore.bip32 static method)": [[5, "pypergraph.dag_keystore.Bip32.get_root_key_from_seed", false]], "get_seed_from_mnemonic() (pypergraph.dag_keystore.bip.bip39 method)": [[5, "pypergraph.dag_keystore.bip.Bip39.get_seed_from_mnemonic", false]], "get_seed_from_mnemonic() (pypergraph.dag_keystore.bip39 method)": [[5, "pypergraph.dag_keystore.Bip39.get_seed_from_mnemonic", false]], "get_tx_v2() (pypergraph.dag_keystore.tx_encode.txencode static method)": [[5, "pypergraph.dag_keystore.tx_encode.TxEncode.get_tx_v2", false]], "get_tx_v2() (pypergraph.dag_keystore.txencode static method)": [[5, "pypergraph.dag_keystore.TxEncode.get_tx_v2", false]], "handle_response() (pypergraph.dag_network.api static method)": [[6, "pypergraph.dag_network.API.handle_response", false]], "handle_response() (pypergraph.dag_network.api.api static method)": [[6, "pypergraph.dag_network.api.API.handle_response", false]], "keystore (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.KeyStore", false]], "keystore (class in pypergraph.dag_keystore.keystore)": [[5, "pypergraph.dag_keystore.keystore.KeyStore", false]], "kryo_serialize() (pypergraph.dag_keystore.tx_encode.txencode method)": [[5, "pypergraph.dag_keystore.tx_encode.TxEncode.kryo_serialize", false]], "kryo_serialize() (pypergraph.dag_keystore.txencode method)": [[5, "pypergraph.dag_keystore.TxEncode.kryo_serialize", false]], "languages (pypergraph.dag_keystore.bip.bip39 attribute)": [[5, "pypergraph.dag_keystore.bip.Bip39.LANGUAGES", false]], "languages (pypergraph.dag_keystore.bip39 attribute)": [[5, "pypergraph.dag_keystore.Bip39.LANGUAGES", false]], "lastreference (class in pypergraph.dag_network.models)": [[6, "pypergraph.dag_network.models.LastReference", false]], "main() (in module pypergraph.main)": [[4, "pypergraph.main.main", false]], "min_salt (pypergraph.dag_keystore.transactionv2 attribute)": [[5, "pypergraph.dag_keystore.TransactionV2.MIN_SALT", false]], "min_salt (pypergraph.dag_keystore.tx_encode.transactionv2 attribute)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2.MIN_SALT", false]], "mnemonic() (pypergraph.dag_keystore.bip.bip39 method)": [[5, "pypergraph.dag_keystore.bip.Bip39.mnemonic", false]], "mnemonic() (pypergraph.dag_keystore.bip39 method)": [[5, "pypergraph.dag_keystore.Bip39.mnemonic", false]], "module": [[4, "module-pypergraph", false], [4, "module-pypergraph.main", false], [5, "module-pypergraph.dag_keystore", false], [5, "module-pypergraph.dag_keystore.bip", false], [5, "module-pypergraph.dag_keystore.constants", false], [5, "module-pypergraph.dag_keystore.keystore", false], [5, "module-pypergraph.dag_keystore.tx_encode", false], [6, "module-pypergraph.dag_network", false], [6, "module-pypergraph.dag_network.api", false], [6, "module-pypergraph.dag_network.constants", false], [6, "module-pypergraph.dag_network.models", false], [7, "module-pypergraph.dag_wallet", false], [7, "module-pypergraph.dag_wallet.constants", false], [7, "module-pypergraph.dag_wallet.wallet", false]], "new() (pypergraph.dag_wallet.wallet class method)": [[7, "pypergraph.dag_wallet.Wallet.new", false]], "new() (pypergraph.dag_wallet.wallet.wallet class method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.new", false]], "post_transaction() (pypergraph.dag_network.api method)": [[6, "pypergraph.dag_network.API.post_transaction", false]], "post_transaction() (pypergraph.dag_network.api.api method)": [[6, "pypergraph.dag_network.api.API.post_transaction", false]], "posttransactionv2 (class in pypergraph.dag_keystore.tx_encode)": [[5, "pypergraph.dag_keystore.tx_encode.PostTransactionV2", false]], "prepare_tx() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.prepare_tx", false]], "prepare_tx() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.prepare_tx", false]], "proofs (pypergraph.dag_keystore.tx_encode.posttransactionv2 attribute)": [[5, "pypergraph.dag_keystore.tx_encode.PostTransactionV2.proofs", false]], "pypergraph": [[4, "module-pypergraph", false]], "pypergraph.dag_keystore": [[5, "module-pypergraph.dag_keystore", false]], "pypergraph.dag_keystore.bip": [[5, "module-pypergraph.dag_keystore.bip", false]], "pypergraph.dag_keystore.constants": [[5, "module-pypergraph.dag_keystore.constants", false]], "pypergraph.dag_keystore.keystore": [[5, "module-pypergraph.dag_keystore.keystore", false]], "pypergraph.dag_keystore.tx_encode": [[5, "module-pypergraph.dag_keystore.tx_encode", false]], "pypergraph.dag_network": [[6, "module-pypergraph.dag_network", false]], "pypergraph.dag_network.api": [[6, "module-pypergraph.dag_network.api", false]], "pypergraph.dag_network.constants": [[6, "module-pypergraph.dag_network.constants", false]], "pypergraph.dag_network.models": [[6, "module-pypergraph.dag_network.models", false]], "pypergraph.dag_wallet": [[7, "module-pypergraph.dag_wallet", false]], "pypergraph.dag_wallet.constants": [[7, "module-pypergraph.dag_wallet.constants", false]], "pypergraph.dag_wallet.wallet": [[7, "module-pypergraph.dag_wallet.wallet", false]], "pypergraph.main": [[4, "module-pypergraph.main", false]], "send() (pypergraph.dag_wallet.wallet method)": [[7, "pypergraph.dag_wallet.Wallet.send", false]], "send() (pypergraph.dag_wallet.wallet.wallet method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.send", false]], "set_api() (pypergraph.dag_wallet.wallet method)": [[7, "pypergraph.dag_wallet.Wallet.set_api", false]], "set_api() (pypergraph.dag_wallet.wallet.wallet method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.set_api", false]], "sign() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.sign", false]], "sign() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.sign", false]], "to_dict() (pypergraph.dag_network.models.lastreference method)": [[6, "pypergraph.dag_network.models.LastReference.to_dict", false]], "to_hex_string() (pypergraph.dag_keystore.transactionv2 static method)": [[5, "pypergraph.dag_keystore.TransactionV2.to_hex_string", false]], "to_hex_string() (pypergraph.dag_keystore.tx_encode.transactionv2 static method)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2.to_hex_string", false]], "transaction() (pypergraph.dag_wallet.wallet method)": [[7, "pypergraph.dag_wallet.Wallet.transaction", false]], "transaction() (pypergraph.dag_wallet.wallet.wallet method)": [[7, "pypergraph.dag_wallet.wallet.Wallet.transaction", false]], "transactionapierror": [[6, "pypergraph.dag_network.api.TransactionApiError", false]], "transactionv2 (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.TransactionV2", false]], "transactionv2 (class in pypergraph.dag_keystore.tx_encode)": [[5, "pypergraph.dag_keystore.tx_encode.TransactionV2", false]], "txencode (class in pypergraph.dag_keystore)": [[5, "pypergraph.dag_keystore.TxEncode", false]], "txencode (class in pypergraph.dag_keystore.tx_encode)": [[5, "pypergraph.dag_keystore.tx_encode.TxEncode", false]], "utf8_length() (pypergraph.dag_keystore.tx_encode.txencode static method)": [[5, "pypergraph.dag_keystore.tx_encode.TxEncode.utf8_length", false]], "utf8_length() (pypergraph.dag_keystore.txencode static method)": [[5, "pypergraph.dag_keystore.TxEncode.utf8_length", false]], "validate_dag_address() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.validate_dag_address", false]], "validate_dag_address() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.validate_dag_address", false]], "validate_mnemonic() (pypergraph.dag_keystore.bip.bip39 static method)": [[5, "pypergraph.dag_keystore.bip.Bip39.validate_mnemonic", false]], "validate_mnemonic() (pypergraph.dag_keystore.bip39 static method)": [[5, "pypergraph.dag_keystore.Bip39.validate_mnemonic", false]], "validate_mnemonic() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.validate_mnemonic", false]], "validate_mnemonic() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.validate_mnemonic", false]], "value (pypergraph.dag_keystore.tx_encode.posttransactionv2 attribute)": [[5, "pypergraph.dag_keystore.tx_encode.PostTransactionV2.value", false]], "verify() (pypergraph.dag_keystore.keystore static method)": [[5, "pypergraph.dag_keystore.KeyStore.verify", false]], "verify() (pypergraph.dag_keystore.keystore.keystore static method)": [[5, "pypergraph.dag_keystore.keystore.KeyStore.verify", false]], "wallet (class in pypergraph.dag_wallet)": [[7, "pypergraph.dag_wallet.Wallet", false]], "wallet (class in pypergraph.dag_wallet.wallet)": [[7, "pypergraph.dag_wallet.wallet.Wallet", false]]}, "objects": {"": [[4, 0, 0, "-", "pypergraph"]], "pypergraph": [[5, 0, 0, "-", "dag_keystore"], [6, 0, 0, "-", "dag_network"], [7, 0, 0, "-", "dag_wallet"], [4, 0, 0, "-", "main"]], "pypergraph.dag_keystore": [[5, 1, 1, "", "Bip32"], [5, 1, 1, "", "Bip39"], [5, 1, 1, "", "COIN"], [5, 1, 1, "", "DERIVATION_PATH"], [5, 1, 1, "", "KeyStore"], [5, 1, 1, "", "TransactionV2"], [5, 1, 1, "", "TxEncode"], [5, 0, 0, "-", "bip"], [5, 0, 0, "-", "constants"], [5, 0, 0, "-", "keystore"], [5, 0, 0, "-", "tx_encode"]], "pypergraph.dag_keystore.Bip32": [[5, 2, 1, "", "get_private_key_from_seed"], [5, 2, 1, "", "get_public_key_from_private_hex"], [5, 2, 1, "", "get_root_key_from_seed"]], "pypergraph.dag_keystore.Bip39": [[5, 3, 1, "", "LANGUAGES"], [5, 2, 1, "", "get_seed_from_mnemonic"], [5, 2, 1, "", "mnemonic"], [5, 2, 1, "", "validate_mnemonic"]], "pypergraph.dag_keystore.COIN": [[5, 3, 1, "", "DAG"], [5, 3, 1, "", "ETH"]], "pypergraph.dag_keystore.DERIVATION_PATH": [[5, 3, 1, "", "DAG"], [5, 3, 1, "", "ETH"], [5, 3, 1, "", "ETH_LEDGER"]], "pypergraph.dag_keystore.KeyStore": [[5, 2, 1, "", "get_dag_address_from_public_key"], [5, 2, 1, "", "get_mnemonic"], [5, 2, 1, "", "get_p12_from_private_key"], [5, 2, 1, "", "get_private_key_from_p12"], [5, 2, 1, "", "get_private_key_from_seed"], [5, 2, 1, "", "get_public_key_from_private_key"], [5, 2, 1, "", "prepare_tx"], [5, 2, 1, "", "sign"], [5, 2, 1, "", "validate_dag_address"], [5, 2, 1, "", "validate_mnemonic"], [5, 2, 1, "", "verify"]], "pypergraph.dag_keystore.TransactionV2": [[5, 3, 1, "", "MIN_SALT"], [5, 2, 1, "", "add_proof"], [5, 2, 1, "", "get_encoded"], [5, 2, 1, "", "get_post_transaction"], [5, 2, 1, "", "to_hex_string"]], "pypergraph.dag_keystore.TxEncode": [[5, 2, 1, "", "get_tx_v2"], [5, 2, 1, "", "kryo_serialize"], [5, 2, 1, "", "utf8_length"]], "pypergraph.dag_keystore.bip": [[5, 1, 1, "", "Bip32"], [5, 1, 1, "", "Bip39"]], "pypergraph.dag_keystore.bip.Bip32": [[5, 2, 1, "", "get_private_key_from_seed"], [5, 2, 1, "", "get_public_key_from_private_hex"], [5, 2, 1, "", "get_root_key_from_seed"]], "pypergraph.dag_keystore.bip.Bip39": [[5, 3, 1, "", "LANGUAGES"], [5, 2, 1, "", "get_seed_from_mnemonic"], [5, 2, 1, "", "mnemonic"], [5, 2, 1, "", "validate_mnemonic"]], "pypergraph.dag_keystore.constants": [[5, 1, 1, "", "COIN"], [5, 1, 1, "", "DERIVATION_PATH"]], "pypergraph.dag_keystore.constants.COIN": [[5, 3, 1, "", "DAG"], [5, 3, 1, "", "ETH"]], "pypergraph.dag_keystore.constants.DERIVATION_PATH": [[5, 3, 1, "", "DAG"], [5, 3, 1, "", "ETH"], [5, 3, 1, "", "ETH_LEDGER"]], "pypergraph.dag_keystore.keystore": [[5, 1, 1, "", "KeyStore"]], "pypergraph.dag_keystore.keystore.KeyStore": [[5, 2, 1, "", "get_dag_address_from_public_key"], [5, 2, 1, "", "get_mnemonic"], [5, 2, 1, "", "get_p12_from_private_key"], [5, 2, 1, "", "get_private_key_from_p12"], [5, 2, 1, "", "get_private_key_from_seed"], [5, 2, 1, "", "get_public_key_from_private_key"], [5, 2, 1, "", "prepare_tx"], [5, 2, 1, "", "sign"], [5, 2, 1, "", "validate_dag_address"], [5, 2, 1, "", "validate_mnemonic"], [5, 2, 1, "", "verify"]], "pypergraph.dag_keystore.tx_encode": [[5, 1, 1, "", "PostTransactionV2"], [5, 1, 1, "", "TransactionV2"], [5, 1, 1, "", "TxEncode"]], "pypergraph.dag_keystore.tx_encode.PostTransactionV2": [[5, 3, 1, "", "proofs"], [5, 3, 1, "", "value"]], "pypergraph.dag_keystore.tx_encode.TransactionV2": [[5, 3, 1, "", "MIN_SALT"], [5, 2, 1, "", "add_proof"], [5, 2, 1, "", "get_encoded"], [5, 2, 1, "", "get_post_transaction"], [5, 2, 1, "", "to_hex_string"]], "pypergraph.dag_keystore.tx_encode.TxEncode": [[5, 2, 1, "", "get_tx_v2"], [5, 2, 1, "", "kryo_serialize"], [5, 2, 1, "", "utf8_length"]], "pypergraph.dag_network": [[6, 1, 1, "", "API"], [6, 0, 0, "-", "api"], [6, 0, 0, "-", "constants"], [6, 0, 0, "-", "models"]], "pypergraph.dag_network.API": [[6, 2, 1, "", "get_address_balance"], [6, 2, 1, "", "get_last_reference"], [6, 2, 1, "", "get_pending_transaction"], [6, 2, 1, "", "handle_response"], [6, 2, 1, "", "post_transaction"]], "pypergraph.dag_network.api": [[6, 1, 1, "", "API"], [6, 4, 1, "", "APIError"], [6, 4, 1, "", "TransactionApiError"]], "pypergraph.dag_network.api.API": [[6, 2, 1, "", "get_address_balance"], [6, 2, 1, "", "get_last_reference"], [6, 2, 1, "", "get_pending_transaction"], [6, 2, 1, "", "handle_response"], [6, 2, 1, "", "post_transaction"]], "pypergraph.dag_network.models": [[6, 1, 1, "", "Balance"], [6, 1, 1, "", "LastReference"]], "pypergraph.dag_network.models.Balance": [[6, 2, 1, "", "ddag_to_dag"]], "pypergraph.dag_network.models.LastReference": [[6, 2, 1, "", "to_dict"]], "pypergraph.dag_wallet": [[7, 1, 1, "", "Wallet"], [7, 0, 0, "-", "constants"], [7, 0, 0, "-", "wallet"]], "pypergraph.dag_wallet.Wallet": [[7, 2, 1, "", "from_mnemonic"], [7, 2, 1, "", "from_private_key"], [7, 2, 1, "", "get_address_balance"], [7, 2, 1, "", "get_dag_address_from_public_key_hex"], [7, 2, 1, "", "get_mnemonic_from_input"], [7, 2, 1, "", "new"], [7, 2, 1, "", "send"], [7, 2, 1, "", "set_api"], [7, 2, 1, "", "transaction"]], "pypergraph.dag_wallet.wallet": [[7, 1, 1, "", "Wallet"]], "pypergraph.dag_wallet.wallet.Wallet": [[7, 2, 1, "", "from_mnemonic"], [7, 2, 1, "", "from_private_key"], [7, 2, 1, "", "get_address_balance"], [7, 2, 1, "", "get_dag_address_from_public_key_hex"], [7, 2, 1, "", "get_mnemonic_from_input"], [7, 2, 1, "", "new"], [7, 2, 1, "", "send"], [7, 2, 1, "", "set_api"], [7, 2, 1, "", "transaction"]], "pypergraph.main": [[4, 5, 1, "", "main"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "terms": {"": 3, "0": [0, 5, 7], "0002": 0, "04": 5, "1": [0, 6], "1137": 5, "12": [5, 7], "1e": 5, "24": 5, "60": 5, "8": 5, "A": 7, "If": 6, "It": 3, "Not": 5, "The": [2, 5, 7], "abandon": 0, "activ": 2, "add": 5, "add_proof": [4, 5], "address": [0, 5, 6, 7], "address_hash": 6, "after": 5, "alpha": 3, "amount": [0, 5, 7], "an": [5, 7], "ani": 6, "api": [0, 3, 4, 5, 7], "apierror": [4, 6], "associ": [6, 7], "async": [4, 6, 7], "asynchron": 7, "avail": 2, "await": [0, 7], "balanc": [0, 4, 6, 7], "balance_onli": 6, "base": [5, 6, 7], "basic": 1, "below": 2, "bin": 2, "bip": 4, "bip32": [4, 5], "bip39": [4, 5], "bool": [5, 6], "boolean": 5, "buzzgreydai": 2, "byte": 5, "can": 2, "cd": 2, "chang": 7, "chinese_simplifi": 5, "chinese_tradit": 5, "choos": 7, "class": [5, 6, 7], "classmethod": 7, "clientrespons": 6, "clone": 2, "coin": [4, 5], "com": 2, "command": 2, "compress": 5, "config": 7, "configur": 7, "constant": 4, "constel": 3, "contain": 6, "contribut": 3, "convert": 6, "correspond": 7, "creat": [0, 2, 5, 7], "current": [3, 7], "custom": [5, 6], "czech": 5, "dag": [0, 4, 5, 6, 7], "dag_address": 7, "dag_keystor": 4, "dag_network": 4, "dag_wallet": 4, "data": 6, "ddag": 6, "ddag_to_dag": [4, 6], "decim": 5, "default": [0, 5], "depend": 2, "deriv": 5, "derivation_path": [4, 5], "destin": 5, "detail": 6, "dict": [5, 6], "dictionari": [5, 6], "earli": 3, "enabl": 3, "encod": 5, "encrypt": 5, "english": 5, "enter": 7, "entropi": 5, "environ": 2, "error": 6, "eth": [4, 5], "eth_ledg": [4, 5], "except": 6, "exist": 7, "explanatori": 5, "factori": 5, "fals": 5, "fee": [0, 5, 7], "fetch": 6, "file": 5, "float": [0, 5, 6, 7], "format": 5, "french": 5, "from": [0, 5, 6, 7], "from_address": 5, "from_mnemon": [0, 4, 7], "from_private_kei": [0, 4, 7], "fullpath": 5, "function": 3, "gener": 5, "get": [0, 5], "get_address_bal": [0, 4, 6, 7], "get_dag_address_from_public_kei": [4, 5], "get_dag_address_from_public_key_hex": [4, 7], "get_encod": [4, 5], "get_last_refer": [4, 6], "get_mnemon": [4, 5], "get_mnemonic_from_input": [4, 7], "get_p12_from_private_kei": [4, 5], "get_pending_transact": [4, 6], "get_post_transact": [4, 5], "get_private_key_from_p12": [4, 5], "get_private_key_from_se": [4, 5], "get_public_key_from_private_hex": [4, 5], "get_public_key_from_private_kei": [4, 5], "get_root_key_from_se": [4, 5], "get_seed_from_mnemon": [4, 5], "get_tx_v2": [4, 5], "git": 2, "github": [2, 3], "handl": 6, "handle_respons": [4, 6], "hash": [5, 6], "hd": 5, "hex": 5, "hexadecim": [5, 7], "http": [2, 6], "i": [2, 3, 5, 6], "id": [5, 7], "import": 0, "includ": 5, "inform": 6, "input": 7, "instal": 1, "int": [5, 6], "integ": 5, "intend": 3, "interact": 3, "introduct": 1, "italian": 5, "japanes": 5, "kei": [0, 5, 6, 7], "keystor": 4, "korean": 5, "kryo": 5, "kryo_seri": [4, 5], "languag": [4, 5], "last": 6, "last_ref": 5, "last_tx_ref": 5, "lastrefer": [4, 6], "layer": [0, 6, 7], "length": 5, "like": 5, "linux": 2, "list": 5, "m": 2, "maco": 2, "main": 1, "mainnet": [0, 6], "make": 6, "master": 5, "me": 3, "messag": [5, 6], "meta": 6, "method": [5, 7], "min_salt": [4, 5], "mnemo": 5, "mnemon": [0, 4, 5, 7], "mnemonic_phras": 5, "model": 4, "modul": 1, "mostli": 7, "msg": 5, "network": [0, 3, 6, 7], "new": [0, 4, 5, 6, 7], "nobl": 5, "node": [5, 7], "non": 0, "none": [5, 6, 7], "now": 5, "object": [5, 6, 7], "onli": 6, "option": 5, "ordin": [5, 6], "otherwis": 6, "out": [2, 3], "p12": 5, "packag": [2, 3, 4], "paramet": [5, 6, 7], "password": 5, "path": 5, "pend": 6, "phrase": [0, 5, 7], "pip": 2, "pleas": 3, "portugues": 5, "post_transact": [4, 6], "posttransactionv2": [4, 5], "prefix": 5, "prepar": 5, "prepare_tx": [4, 5], "privat": [0, 5, 7], "private_kei": [0, 5, 7], "private_key_hex": 5, "product": 3, "prompt": 7, "proof": [4, 5], "public": [5, 6, 7], "public_kei": [0, 5, 7], "public_key_hex": [5, 7], "purpos": 7, "pypergraph": [2, 3], "pypi": 2, "python": [2, 3], "quantiti": 7, "r": 2, "rais": 6, "reach": 3, "receiv": 7, "refer": [5, 6], "relat": 6, "repositori": 2, "represent": 5, "requir": 2, "respons": [0, 6, 7], "return": [0, 5, 6, 7], "rle": 5, "root": 5, "run": 2, "salt": 5, "script": 2, "secp256k1": 5, "secur": 3, "seed": [5, 7], "seed_byt": 5, "self": 5, "send": [0, 4, 5, 7], "separ": 7, "serial": 5, "set": 0, "set_api": [0, 4, 7], "set_refer": 5, "sha512hash": 5, "should": 7, "sign": [4, 5], "signatur": 5, "signature_hex": 5, "singl": 0, "some_valid_dag_address": 0, "some_valid_private_kei": 0, "sourc": [2, 4, 5, 6, 7], "space": 7, "spanish": 5, "specif": 6, "state": 3, "static": [5, 6, 7], "statu": 6, "str": [5, 6, 7], "string": [5, 7], "stuff": 4, "submit": 6, "submodul": 1, "subpackag": 1, "support": 5, "test": [4, 7], "testnet": 0, "tip": 7, "to_address": [0, 5, 7], "to_dict": [4, 6], "to_hex_str": [4, 5], "transact": [0, 4, 5, 6, 7], "transaction_data": 6, "transaction_hash": 6, "transactionapierror": [4, 6], "transactionv2": [4, 5, 7], "true": [5, 6], "try": 2, "tupl": 5, "turkish": 5, "tx": [0, 7], "tx_encod": 4, "tx_hash": 5, "txencod": [4, 5], "txt": 2, "unencrypt": 5, "us": [5, 7], "user": 7, "utf8": 5, "utf8_length": [4, 5], "val": 5, "valid": [5, 7], "validate_dag_address": [4, 5], "validate_mnemon": [4, 5], "valu": [0, 4, 5, 6], "variabl": 5, "venv": 2, "verifi": [4, 5], "version": 5, "virtual": 2, "wallet": [0, 3, 4, 5, 6], "whether": 5, "window": 2, "wish": 3, "without": 5, "word": [0, 5, 7], "yet": 2, "you": [2, 3]}, "titles": ["Basics", "Pypergraph Documentation", "Installation", "Introduction", "Pypergraph", "pypergraph.dag_keystore package", "pypergraph.dag_network package", "pypergraph.dag_wallet package"], "titleterms": {"api": 6, "basic": 0, "bip": 5, "constant": [5, 6, 7], "content": [1, 4, 5, 6, 7], "dag_keystor": 5, "dag_network": 6, "dag_wallet": 7, "document": 1, "instal": 2, "introduct": 3, "keystor": 5, "main": 4, "model": 6, "modul": [4, 5, 6, 7], "packag": [5, 6, 7], "pypergraph": [1, 4, 5, 6, 7], "submodul": [4, 5, 6, 7], "subpackag": 4, "tx_encod": 5, "wallet": 7}})